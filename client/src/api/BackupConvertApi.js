/**
 * dataintegrationapi
 * Easily and directly query database backup files, convert into other file formats.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MssqlBakEnumerateTablesResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/MssqlBakEnumerateTablesResult'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudmersiveDataintegrationApiClient) {
      root.CloudmersiveDataintegrationApiClient = {};
    }
    root.CloudmersiveDataintegrationApiClient.BackupConvertApi = factory(root.CloudmersiveDataintegrationApiClient.ApiClient, root.CloudmersiveDataintegrationApiClient.MssqlBakEnumerateTablesResult);
  }
}(this, function(ApiClient, MssqlBakEnumerateTablesResult) {
  'use strict';

  /**
   * BackupConvert service.
   * @module api/BackupConvertApi
   * @version 2.0.2
   */

  /**
   * Constructs a new BackupConvertApi. 
   * @alias module:api/BackupConvertApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the dataintegrationBackupConvertMssqlBakGetTablesPost operation.
     * @callback module:api/BackupConvertApi~dataintegrationBackupConvertMssqlBakGetTablesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MssqlBakEnumerateTablesResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all tables stored in a SQL Server Backup (.BAK) file
     * @param {Object} opts Optional parameters
     * @param {File} opts.inputFile Input file to perform the operation on
     * @param {module:api/BackupConvertApi~dataintegrationBackupConvertMssqlBakGetTablesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MssqlBakEnumerateTablesResult}
     */
    this.dataintegrationBackupConvertMssqlBakGetTablesPost = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'inputFile': opts['inputFile']
      };

      var authNames = ['Apikey'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = MssqlBakEnumerateTablesResult;

      return this.apiClient.callApi(
        '/dataintegration/backup/convert/mssql/bak/get/tables', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the dataintegrationBackupConvertMssqlBakToCsvPost operation.
     * @callback module:api/BackupConvertApi~dataintegrationBackupConvertMssqlBakToCsvPostCallback
     * @param {String} error Error message, if any.
     * @param {'Blob'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Converts a SQL Server Backup (.BAK) file into CSV for a specified table
     * Input the target table to extract the data as a CSV format file.  Supports a wide array of SQL Server .BAK files and SQL Server backup file versions.  Consumes 1 API call per MB of input data.
     * @param {Object} opts Optional parameters
     * @param {String} opts.tableName Name of the table to return
     * @param {File} opts.inputFile Input file to perform the operation on
     * @param {module:api/BackupConvertApi~dataintegrationBackupConvertMssqlBakToCsvPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'Blob'}
     */
    this.dataintegrationBackupConvertMssqlBakToCsvPost = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'tableName': opts['tableName']
      };
      var formParams = {
        'inputFile': opts['inputFile']
      };

      var authNames = ['Apikey'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['text/csv'];
      var returnType = 'Blob';

      return this.apiClient.callApi(
        '/dataintegration/backup/convert/mssql/bak/to/csv', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
